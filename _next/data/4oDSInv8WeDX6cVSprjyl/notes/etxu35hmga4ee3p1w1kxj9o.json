{"pageProps":{"note":{"id":"etxu35hmga4ee3p1w1kxj9o","title":"AWS Lambda","desc":"","updated":1655705476177,"created":1655018320878,"custom":{},"fname":"devlog.AWS Lambda","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"9ce8964f905ccdbe2b111802a6e5fc73","links":[{"type":"wiki","from":{"fname":"devlog.AWS Lambda","id":"etxu35hmga4ee3p1w1kxj9o","vaultName":"Dendron"},"value":"devlog.serverless","alias":"devlog.serverless","position":{"start":{"line":2,"column":121,"offset":121},"end":{"line":2,"column":142,"offset":142},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.serverless"}},{"type":"wiki","from":{"fname":"devlog.AWS Lambda","id":"etxu35hmga4ee3p1w1kxj9o","vaultName":"Dendron"},"value":"devlog.AWS S3","alias":"devlog.AWS S3","position":{"start":{"line":2,"column":287,"offset":287},"end":{"line":2,"column":304,"offset":304},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.AWS S3"}},{"type":"wiki","from":{"fname":"devlog.AWS Lambda","id":"etxu35hmga4ee3p1w1kxj9o","vaultName":"Dendron"},"value":"devlog.AWS DynamoDB","alias":"devlog.AWS DynamoDB","position":{"start":{"line":2,"column":306,"offset":306},"end":{"line":2,"column":329,"offset":329},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.AWS DynamoDB"}},{"type":"wiki","from":{"fname":"devlog.AWS Lambda","id":"etxu35hmga4ee3p1w1kxj9o","vaultName":"Dendron"},"value":"devlog.AWS API Gateway","alias":"devlog.AWS API Gateway","position":{"start":{"line":2,"column":331,"offset":331},"end":{"line":2,"column":357,"offset":357},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.AWS API Gateway"}},{"type":"wiki","from":{"fname":"devlog.AWS Lambda","id":"etxu35hmga4ee3p1w1kxj9o","vaultName":"Dendron"},"value":"devlog.AWS SES","alias":"devlog.AWS SES","position":{"start":{"line":2,"column":359,"offset":359},"end":{"line":2,"column":377,"offset":377},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.AWS SES"}},{"type":"wiki","from":{"fname":"devlog.AWS Lambda","id":"etxu35hmga4ee3p1w1kxj9o","vaultName":"Dendron"},"value":"devlog.AWS CloudFormation","alias":"devlog.AWS CloudFormation","position":{"start":{"line":23,"column":206,"offset":1669},"end":{"line":23,"column":235,"offset":1698},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.AWS CloudFormation"}},{"type":"wiki","from":{"fname":"devlog.AWS Lambda","id":"etxu35hmga4ee3p1w1kxj9o","vaultName":"Dendron"},"value":"devlog.AWS SAM","alias":"devlog.AWS SAM","position":{"start":{"line":23,"column":258,"offset":1721},"end":{"line":23,"column":276,"offset":1739},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.AWS SAM"}},{"from":{"fname":"areas.devops","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":200,"column":3,"offset":5620},"end":{"line":200,"column":24,"offset":5641},"indent":[]},"value":"devlog.AWS Lambda","alias":"devlog.AWS Lambda"},{"from":{"fname":"devlog.AWS API Gateway","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":31,"column":21,"offset":1903},"end":{"line":31,"column":42,"offset":1924},"indent":[]},"value":"devlog.AWS Lambda","alias":"devlog.AWS Lambda"},{"from":{"fname":"devlog.AWS CodeCommit","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":6,"column":123,"offset":861},"end":{"line":6,"column":144,"offset":882},"indent":[]},"value":"devlog.AWS Lambda","alias":"devlog.AWS Lambda"},{"from":{"fname":"devlog.AWS CodeDeploy","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":36,"column":126,"offset":1629},"end":{"line":36,"column":147,"offset":1650},"indent":[]},"value":"devlog.AWS Lambda","alias":"devlog.AWS Lambda"},{"from":{"fname":"devlog.AWS CodeDeploy","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":56,"column":3,"offset":2391},"end":{"line":56,"column":24,"offset":2412},"indent":[]},"value":"devlog.AWS Lambda","alias":"devlog.AWS Lambda"},{"from":{"fname":"devlog.AWS CodePipeline","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":57,"column":29,"offset":3152},"end":{"line":57,"column":50,"offset":3173},"indent":[]},"value":"devlog.AWS Lambda","alias":"devlog.AWS Lambda"},{"from":{"fname":"devlog.AWS Step Functions","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":4,"column":170,"offset":319},"end":{"line":4,"column":191,"offset":340},"indent":[]},"value":"devlog.AWS Lambda","alias":"devlog.AWS Lambda"},{"from":{"fname":"devlog.AWS Step Functions","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":13,"column":53,"offset":887},"end":{"line":13,"column":74,"offset":908},"indent":[]},"value":"devlog.AWS Lambda","alias":"devlog.AWS Lambda"},{"from":{"fname":"devlog.cloud","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":29,"column":5,"offset":817},"end":{"line":29,"column":26,"offset":838},"indent":[]},"value":"devlog.AWS Lambda","alias":"devlog.AWS Lambda"}],"anchors":{"versions-and-aliases":{"type":"header","text":"Versions and Aliases","value":"versions-and-aliases","line":21,"column":0,"depth":2},"sam-framework---serverless-application-model":{"type":"header","text":"SAM Framework - Serverless Application Model","value":"sam-framework---serverless-application-model","line":27,"column":0,"depth":2}},"children":[],"parent":"9gtn7g40cvqui0sifl1s7t5","data":{}},"body":"<h1 id=\"aws-lambda\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#aws-lambda\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>AWS Lambda</h1>\n<p>It is a compute service that lets you run code without having to install it on the operating system/provision a server. <a href=\"/notes/0dhybuldv4znj0j1ivmevhe\">Serverless</a>. Lambda is stateless. It is event driven. It is a function that is invoked by an event and returns a response. Event sources can be events from <a href=\"/notes/faxbzx44mmk9u2ix1fdfuu7\">AWS S3</a>, <a href=\"/notes/tczgjqm691xi6olmcy78ckc\">AWS DynamoDB</a>, <a href=\"/notes/cwbupxqnwdcc2f9cfdsiqh9\">AWS API Gateway</a>, <a href=\"/notes/nimgbn0mpjrqmik4qwworir\">AWS SES</a>, based on these events we can many things.</p>\n<ul>\n<li>The Lambda function (Code and Deployment package) is a single file.</li>\n<li>Memory Size Specification.</li>\n<li>Execution Timeout (15 minutes)</li>\n<li>IAM Role(The Execution Role)</li>\n<li>Event Source Mapping</li>\n</ul>\n<p>You are charged for when the Lambda function is invoked or how long it runs.</p>\n<p>If your functions are running for longer than 15 minutes, you might want to consider step functions. Run multiple functions in parallel.</p>\n<h2 id=\"versions-and-aliases\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#versions-and-aliases\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Versions and Aliases</h2>\n<p>You can publish one or more versions of your Lambda functions. Each Lambda function has a unique ARN. Once published it cannot be changed. Latest version of the function is tagged as <strong>$Latest</strong> (which happens to be default version).</p>\n<p>An Alias is a pointer to a specific Lambda function version. Each Alias has a unique ARN and unique Lambda functions they can be modified can be updated to point to different Lambda functions. They can be used for debugging and are ideal for rapid rollback deployments. Be careful when pointing multiple aliases to one version.</p>\n<h2 id=\"sam-framework---serverless-application-model\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#sam-framework---serverless-application-model\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>SAM Framework - Serverless Application Model</h2>\n<p>It is an open source framework for building serverless applications. It provides shorthand syntax to expression functions, APIs, databases, event source mappings. We do this using YAML. It integrates with <a href=\"/notes/7zaax8a13r0jjnssx46u39a\">AWS CloudFormation</a>. To use it we install <a href=\"/notes/es95bb2vwmmx720qkpcvjh5\">AWS SAM</a> Cli, it provides a Lambda like execution environment to locally build, test and debug your applications and prepare them for integration with CloudFormation.</p>\n<p>It provides a bridge between Lambda and CloudFormation. Ultimately, we can store our Lambda functions and execute them within CloudFormation(templates). It is basically a CloudFormation extension optimized for serverless applications. Using the <strong>Transform function</strong> we can include SAM code in our CF templates.</p>\n<p><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1655655371/wiki/mhvxogw0tbatikroqohf.png\"></p>\n<p>There is no charge for SAM. Youâ€™re only charged for the resources created.</p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/522ww47pqvt6y0yj8zparmy\">DevOps</a></li>\n<li><a href=\"/notes/cwbupxqnwdcc2f9cfdsiqh9\">AWS API Gateway</a></li>\n<li><a href=\"/notes/gualur07hbgjlaw396spiji\">AWS CodeCommit</a></li>\n<li><a href=\"/notes/49naltrgmfezkzp9g3fjfaq\">AWS CodeDeploy</a></li>\n<li><a href=\"/notes/3n1o179sti2wtnjkq48one1\">AWS CodePipeline</a></li>\n<li><a href=\"/notes/4i7qpwtzjjihtv7m1gfnjxw\">AWS Step Functions</a></li>\n<li><a href=\"/notes/7gs83aparu74kp0h3mkz2p9\">Cloud</a></li>\n</ul>","noteIndex":{"id":"3nfl4nvv516muyzozhcwrw8","title":"/root","desc":"","updated":1655559901157,"created":1637610830605,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"581715455a6f0f7a699209e8521b4acf","links":[{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"archive.about","alias":"my","position":{"start":{"line":4,"column":9,"offset":37},"end":{"line":4,"column":29,"offset":57},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"archive.about"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"tags.areas","alias":"#areas","position":{"start":{"line":20,"column":111,"offset":1051},"end":{"line":20,"column":117,"offset":1057},"indent":[]},"xvault":false,"to":{"fname":"tags.areas"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"tags.areas","alias":"#areas","position":{"start":{"line":21,"column":3,"offset":1198},"end":{"line":21,"column":9,"offset":1204},"indent":[]},"xvault":false,"to":{"fname":"tags.areas"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes","alias":"swipes","position":{"start":{"line":27,"column":3,"offset":1724},"end":{"line":27,"column":13,"offset":1734},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes.quotes","alias":"quotes","position":{"start":{"line":27,"column":48,"offset":1769},"end":{"line":27,"column":72,"offset":1793},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes.quotes"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes.excerpts","alias":"excerpts","position":{"start":{"line":27,"column":74,"offset":1795},"end":{"line":27,"column":102,"offset":1823},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes.excerpts"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes.sayings","alias":"sayings","position":{"start":{"line":27,"column":104,"offset":1825},"end":{"line":27,"column":130,"offset":1851},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes.sayings"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes.phrases","alias":"phrases","position":{"start":{"line":27,"column":132,"offset":1853},"end":{"line":27,"column":158,"offset":1879},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes.phrases"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"resources.people","alias":"others","position":{"start":{"line":27,"column":214,"offset":1935},"end":{"line":27,"column":241,"offset":1962},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"resources.people"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"inbox.webmark","alias":"webmark","position":{"start":{"line":31,"column":235,"offset":2463},"end":{"line":31,"column":260,"offset":2488},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"inbox.webmark"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"slipbox.Ontology","alias":"slipbox.Ontology","position":{"start":{"line":55,"column":3,"offset":3735},"end":{"line":55,"column":23,"offset":3755},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"slipbox.Ontology"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"archive.about","alias":"About me","position":{"start":{"line":60,"column":3,"offset":3963},"end":{"line":60,"column":29,"offset":3989},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"archive.about"}}],"anchors":{"welcome-to-noetic-noggin":{"type":"header","text":"Welcome to Noetic Noggin","value":"welcome-to-noetic-noggin","line":8,"column":0,"depth":1},"principles":{"type":"header","text":"Principles","value":"principles","line":18,"column":0,"depth":2},"all-notes-should-be-relative-to-me":{"type":"header","text":"All notes should be relative to me.","value":"all-notes-should-be-relative-to-me","line":20,"column":0,"depth":3},"gotta-capture-em-all":{"type":"header","text":"Gotta capture 'em all","value":"gotta-capture-em-all","line":30,"column":0,"depth":3},"dont-force-evolution":{"type":"header","text":"Don't force evolution","value":"dont-force-evolution","line":40,"column":0,"depth":3},"noise--signal":{"type":"header","text":"Noise & Signal","value":"noise--signal","line":45,"column":0,"depth":3},"why-do-any-of-this":{"type":"header","text":"Why do any of this?","value":"why-do-any-of-this","line":50,"column":0,"depth":3},"structure-of-this-wiki":{"type":"header","text":"Structure of this wiki","value":"structure-of-this-wiki","line":59,"column":0,"depth":2},"quicklinks":{"type":"header","text":"Quicklinks","value":"quicklinks","line":64,"column":0,"depth":2}},"children":["0yay2om15bsg2li2p6qgux7","05c4nnjqa92zx11ld6o0ytn","9gtn7g40cvqui0sifl1s7t5","ftbd1hknsd3ocd7jao26tn3","a1kmkdbpclaz5p6sykaw6kc","z121gkmqfo09m8r7jgnpfgn","gkqrr7xbt18xhi93dmjrwzj","ja2x4lrgejr9o9wvit0bd0d","luv39odkfibx3wdosvigwvy","vtvk3bi6o72w58oima9xzf3","yy652kvqrkfn9ipk07m40h4"],"parent":null,"data":{},"body":"\n# Welcome to Noetic Noggin\n\nThis is [[my|archive.about]] personal wiki and a commonplace book; notes by me, for me.\n\nðŸš§ Permanently under construction ðŸš§\n\n![](https://res.cloudinary.com/zubayr/image/upload/v1658499909/wiki/ajevkuyebljlxiblyst2.png)\n\nThis wiki was made possible with [dendron.so](https://dendron.so) and [obisidian.md](https://obsidian.md). Stored on [Github Repository](https://github.com/zubayrrr/dendron) and hosted on [Netlify](https://netlify.com) for free.\n\n## Principles\n\n### All notes should be relative to me.\n\n- All notes in principle are written for me; what I know about a subject, how I feel about a particular thing.\n- Opinions are fine as long as I feel strong epistemic confidence in the given opinion.\n- Don't over explain a note if it's not necessary, remember, these notes are for you and are relative to whatever knowledge you posses about the subject.\n- Read books and make an dedicated notes for them.\n- Listen podcasts but capture them inside a \"subject specific\" note or \"Map of Concept\" note or a note tagged #areas. Because making notes from podcasts can be tedious as they're not as well structured as books for consumption.(Whose merit is debatable.)\n- #areas are basically \"Map of Concept\" notes but I have recently come to the realization that its better to maintain them [Nikita Voloboev style](https://wiki.nikiv.dev/) but with heavy usage of transclusion and backlinking.\n  - \"Resources\" should be first processed and then mentioned inside the note, otherwise they should be left in inbox.\n\n### Gotta capture 'em all\n\n- Hog whatever information tickles your pickle([anything that gratifies one's intellectual curiosity](https://news.ycombinator.com/newsguidelines.html)).\n- [[swipes]] are interesting/useful bits of... [[quotes|swipes.quotes]], [[excerpts|swipes.excerpts]], [[sayings|swipes.sayings]], [[phrases|swipes.phrases]]. Essentially, ideas, opinions that are swiped off from [[others|resources.people]].\n- Make no distinction between \"your\" ideas and ideas of \"others\", because if you vibe with an idea; it's already yours.\n- But also remember \"If you've time to consume, you've time to produce.\".\n- Use [raindrop.io](https://raindrop.io) to manage your URL bookmarks.\n- If you need to bookmark a webpage or an article all together, use [MarkDownload](https://chrome.google.com/webstore/detail/markdownload-markdown-web/pcmpcfapbekmbjjkdalcgopdkipoggdi?hl=en-GB) to rip the entire page. Let's call it a [[webmark|inbox.webmark]]; it belong in the `/inbox`.\n- Similar process is employed for capturing tweets using [tweet-to-markdown](https://github.com/kbravh/tweet-to-markdown) and it also belongs in the `/inbox`.\n\n### Don't force evolution\n\n- Let your second brain evolve at it's own pace.\n- The structure should never be _too_ rigid because its meant to take form by itself.\n\n### Noise & Signal\n\n- While capturing ideas left and right is recommended, make sure you're not harming your periods of focus.\n- Have impenetrable focus periods (use Pomodoro method) where you only care about the work on hand and nothing else.\n\n### Why do any of this?\n\n- Because I can't remember everything - there's a lot of information around that interests me and there isn't enough working memory installed in me.\n- So, I make notes - to remember, to create, to meditate, to think.\n- A bodybuilder's portfolio is their body - my portfolio is my wiki.\n- Not only am I making - whatever I know - tangible by writing it down. I know exactly where to look if I ever forget something.\n- I am at the beginning of my learning adventures. When I look back at it, I will know where I came from and how my thoughts evolved over time.\n- Plus, its really fun to nerd out.\n\n## Structure of this wiki\n\n- [[slipbox.Ontology]] explains the structure of this wiki and the tags, backlinks used in it.\n- Dendron takes care of the structure and hierarchy(mostly), but I insist on using tags for backwards compatibility.\n\n## Quicklinks\n\n- [[About me|archive.about]]\n- [Github](https://github.com/zubayrrr)\n- [Twitter](https://twitter.com/zoobhalu)\n- [Blog](https://zubayrali.in)\n- [Guestbook](https://www.yourworldoftext.com/~zubayrali/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template","insertNote":{"initialValue":"templates"}},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableHandlebarTemplates":true,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"theme":"dark","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Noetic Noggin","description":"Personal Wiki / Digital Garden","author":"Zubayr Ali","twitter":"zoobhalu"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"siteUrl":"localhost:3000","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}