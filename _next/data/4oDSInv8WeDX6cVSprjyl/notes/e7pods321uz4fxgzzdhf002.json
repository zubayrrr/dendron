{"pageProps":{"note":{"id":"e7pods321uz4fxgzzdhf002","title":"Boto","desc":"","updated":1658505846946,"created":1653408519142,"custom":{},"fname":"devlog.boto","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"0d801a0af9efeda947aa1a02c3afd6ae","links":[{"type":"wiki","from":{"fname":"devlog.boto","id":"e7pods321uz4fxgzzdhf002","vaultName":"Dendron"},"value":"devlog.aws","alias":"devlog.aws","position":{"start":{"line":2,"column":10,"offset":10},"end":{"line":2,"column":24,"offset":24},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.aws"}},{"type":"wiki","from":{"fname":"devlog.boto","id":"e7pods321uz4fxgzzdhf002","vaultName":"Dendron"},"value":"devlog.python","alias":"devlog.python","position":{"start":{"line":2,"column":26,"offset":26},"end":{"line":2,"column":43,"offset":43},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.python"}},{"type":"wiki","from":{"fname":"devlog.boto","id":"e7pods321uz4fxgzzdhf002","vaultName":"Dendron"},"value":"devlog.terraform","alias":"devlog.terraform","position":{"start":{"line":10,"column":41,"offset":262},"end":{"line":10,"column":61,"offset":282},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.terraform"}},{"type":"wiki","from":{"fname":"devlog.boto","id":"e7pods321uz4fxgzzdhf002","vaultName":"Dendron"},"value":"devlog.terraform","alias":"devlog.terraform","position":{"start":{"line":79,"column":3,"offset":1910},"end":{"line":79,"column":23,"offset":1930},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.terraform"}},{"type":"wiki","from":{"fname":"devlog.boto","id":"e7pods321uz4fxgzzdhf002","vaultName":"Dendron"},"value":"devlog.ec2 server status check","alias":"devlog.ec2 server status check","position":{"start":{"line":97,"column":3,"offset":3247},"end":{"line":97,"column":37,"offset":3281},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.ec2 server status check"}},{"type":"wiki","from":{"fname":"devlog.boto","id":"e7pods321uz4fxgzzdhf002","vaultName":"Dendron"},"value":"devlog.add env tags to  ec2 servers","alias":"devlog.add env tags to  ec2 servers","position":{"start":{"line":98,"column":3,"offset":3284},"end":{"line":98,"column":42,"offset":3323},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.add env tags to  ec2 servers"}},{"type":"wiki","from":{"fname":"devlog.boto","id":"e7pods321uz4fxgzzdhf002","vaultName":"Dendron"},"value":"devlog.EKS cluster information","alias":"devlog.EKS cluster information","position":{"start":{"line":99,"column":3,"offset":3326},"end":{"line":99,"column":37,"offset":3360},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.EKS cluster information"}},{"type":"wiki","from":{"fname":"devlog.boto","id":"e7pods321uz4fxgzzdhf002","vaultName":"Dendron"},"value":"devlog.Automate Data Backup of EC2 instances","alias":"devlog.Automate Data Backup of EC2 instances","position":{"start":{"line":100,"column":3,"offset":3363},"end":{"line":100,"column":51,"offset":3411},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.Automate Data Backup of EC2 instances"}},{"type":"wiki","from":{"fname":"devlog.boto","id":"e7pods321uz4fxgzzdhf002","vaultName":"Dendron"},"value":"devlog.Automate cleanup of old Snapshots","alias":"devlog.Automate cleanup of old Snapshots","position":{"start":{"line":101,"column":3,"offset":3414},"end":{"line":101,"column":47,"offset":3458},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.Automate cleanup of old Snapshots"}},{"type":"wiki","from":{"fname":"devlog.boto","id":"e7pods321uz4fxgzzdhf002","vaultName":"Dendron"},"value":"devlog.Restore volume from a snapshot of EC2 instance","alias":"devlog.Restore volume from a snapshot of EC2 instance","position":{"start":{"line":102,"column":3,"offset":3461},"end":{"line":102,"column":60,"offset":3518},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.Restore volume from a snapshot of EC2 instance"}},{"from":{"fname":"devlog.Automate Data Backup of EC2 instances","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":2,"column":12,"offset":12},"end":{"line":2,"column":27,"offset":27},"indent":[]},"value":"devlog.boto","alias":"devlog.boto"},{"from":{"fname":"devlog.Automate cleanup of old Snapshots","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":2,"column":12,"offset":12},"end":{"line":2,"column":27,"offset":27},"indent":[]},"value":"devlog.boto","alias":"devlog.boto"},{"from":{"fname":"devlog.EKS cluster information","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":2,"column":12,"offset":12},"end":{"line":2,"column":27,"offset":27},"indent":[]},"value":"devlog.boto","alias":"devlog.boto"},{"from":{"fname":"devlog.Restore volume from a snapshot of EC2 instance","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":2,"column":12,"offset":12},"end":{"line":2,"column":27,"offset":27},"indent":[]},"value":"devlog.boto","alias":"devlog.boto"},{"from":{"fname":"devlog.add env tags to  ec2 servers","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":2,"column":12,"offset":12},"end":{"line":2,"column":27,"offset":27},"indent":[]},"value":"devlog.boto","alias":"devlog.boto"},{"from":{"fname":"devlog.ec2 server status check","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":2,"column":12,"offset":12},"end":{"line":2,"column":27,"offset":27},"indent":[]},"value":"devlog.boto","alias":"devlog.boto"},{"from":{"fname":"devlog.python","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":16,"offset":16},"indent":[]},"value":"devlog.boto","alias":"devlog.boto"}],"anchors":{"automation-on-aws-using-boto":{"type":"header","text":"Automation on AWS using Boto","value":"automation-on-aws-using-boto","line":14,"column":0,"depth":2},"notes":{"type":"header","text":"Notes","value":"notes","line":66,"column":0,"depth":2},"labs":{"type":"header","text":"Labs","value":"labs","line":101,"column":0,"depth":2},"resources":{"type":"header","text":"Resources","value":"resources","line":110,"column":0,"depth":2}},"children":[],"parent":"9gtn7g40cvqui0sifl1s7t5","data":{}},"body":"<h1 id=\"boto\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#boto\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Boto</h1>\n<ul>\n<li>Areas: <a href=\"/notes/gvpkbgglehtr9ej5e0uj44j\">AWS</a>, <a href=\"/notes/wa4wthnhw54hd5wfyocyvqa\">Python</a></li>\n</ul>\n<hr>\n<p>Boto3 is the name of the Python SDK for AWS. It allows you to directly create, update, and delete AWS resources from your Python scripts.</p>\n<h2 id=\"automation-on-aws-using-boto\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#automation-on-aws-using-boto\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Automation on AWS using Boto</h2>\n<ul>\n<li>Infrastructure provisioning just like <a href=\"/notes/mkwoo3ek4y6bnddpy1iteb9\">Terraform</a></li>\n<li>Making backups</li>\n<li>Doing cleanups</li>\n<li>Configuration of existing servers</li>\n<li>Doing health-checks/monitoring</li>\n</ul>\n<ol>\n<li>Connect to AWS account (uses <code>~/.aws/config</code> that was created using <code>aws configure</code> )</li>\n<li>Create a VPC</li>\n<li>Create a Subnet</li>\n</ol>\n<p><code>pip install boto3</code> to install the library on your local machine</p>\n<pre class=\"language-py\"><code class=\"language-py\"><span class=\"token comment\"># main.py</span>\n<span class=\"token keyword\">import</span> boto3\n\nec2_client <span class=\"token operator\">=</span> boto3<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">(</span><span class=\"token string\">'ec2'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># overriding default region configured on ~/.aws/config</span>\n<span class=\"token comment\"># ec2_client = boto3.client('ec2', region_name=\"eu-central-1\")</span>\n\nec2_resource <span class=\"token operator\">=</span> boto3<span class=\"token punctuation\">.</span>resource<span class=\"token punctuation\">(</span><span class=\"token string\">'ec2'</span><span class=\"token punctuation\">)</span>\n\nnew_vpc <span class=\"token operator\">=</span> ec2_resource<span class=\"token punctuation\">.</span>create_vpc<span class=\"token punctuation\">(</span>\n  CidrBlock<span class=\"token operator\">=</span><span class=\"token string\">\"10.0.0.0/16\"</span>\n<span class=\"token punctuation\">)</span>\n\nnew_vpc_create_subnet<span class=\"token punctuation\">(</span>\n  CidrBlock<span class=\"token operator\">=</span><span class=\"token string\">\"10.0.0.0/24\"</span>\n<span class=\"token punctuation\">)</span>\n\nnew_vpc<span class=\"token punctuation\">.</span>create_tags<span class=\"token punctuation\">(</span>\n  Tags<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'Key'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Name'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'Value'</span><span class=\"token punctuation\">:</span> 'my<span class=\"token operator\">-</span>vpc\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span>\n\nall_available_vpcs <span class=\"token operator\">=</span> ec2_client<span class=\"token punctuation\">.</span>describe_vpcs<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nvpcs <span class=\"token operator\">=</span> all_available_vpcs<span class=\"token punctuation\">[</span><span class=\"token string\">\"Vpcs\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>all_available_vpcs<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> vpc <span class=\"token keyword\">in</span> vpcs<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>vpc<span class=\"token punctuation\">[</span><span class=\"token string\">\"VpcId\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  cidr_block_assoc_sets <span class=\"token operator\">=</span> vpc<span class=\"token punctuation\">[</span><span class=\"token string\">\"CidrBlockAssociationSet\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">for</span> assoc_set <span class=\"token keyword\">in</span> cidr_block_assoc_sets<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>assoc_set<span class=\"token punctuation\">[</span><span class=\"token string\">\"CidrBlockState\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"notes\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#notes\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Notes</h2>\n<p><strong>How to use <code>boto3</code></strong></p>\n<ul>\n<li>What function name we need to call?</li>\n<li>What parameters the function takes?</li>\n<li>What is returned from this function call? (<strong>response</strong>) (<strong>response datatype</strong>)</li>\n</ul>\n<p><strong><code>client</code> VS <code>resource</code></strong></p>\n<ul>\n<li>\n<p>Client is more low-level API.</p>\n</li>\n<li>\n<p>Client provides one-to-one mapping to the underlying HTTP API operations.</p>\n</li>\n<li>\n<p>Resource provides resource objects to access attributes and perform actions.</p>\n</li>\n<li>\n<p>Resource is like a wrapper around Client that makes it a higher-level API and object-oriented.</p>\n</li>\n<li>\n<p>Resource returns a <code>Resource Object</code>, we can use for subsequent calls.</p>\n</li>\n</ul>\n<p><strong>Terraform VS Python</strong></p>\n<ul>\n<li>\n<p><a href=\"/notes/mkwoo3ek4y6bnddpy1iteb9\">Terraform</a> manages state of the infrastructure. It creates and configures.</p>\n</li>\n<li>\n<p>Since Terraform knows the current state, it also knows the different between current state and desired state. It takes care of all the decision/steps to be made.</p>\n</li>\n<li>\n<p>Terraform is idempotent(no surprises).</p>\n</li>\n<li>\n<p>If you delete the code block of a resource declaration and do <code>terraform apply</code> it'll delete the resource as it knows that you no longer want those resource based on your TF configuration file.</p>\n</li>\n<li>\n<p>Python is not idempotent, it'll create infrastructure every time you run the script. You're not \"declaring\" how many \"resources\" you want in your infra. Basically, it doesn't have state.</p>\n</li>\n<li>\n<p>You need to explicitly delete your resources. Not easy because of specific policies(like of a VPC). Requires a lot of code to make it happen.</p>\n</li>\n</ul>\n<p><strong>Use cases of Boto</strong></p>\n<ul>\n<li>More complex logic, since Python is a full fledged programming language allowing you to use conditional statements etc.</li>\n<li>Boto allows far more things than Terraform offers because of it's low-level API.</li>\n<li>Boto is an AWS library - it offers far more information than Terraform. Allowing you to do things like backups, monitoring, scheduled tasks etc.</li>\n<li>You can use other libraries in your program to extend functionality.</li>\n<li>You can even add a web interface to your program. A UI.</li>\n</ul>\n<h2 id=\"labs\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#labs\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Labs</h2>\n<ul>\n<li><a href=\"/notes/i5wu7j4cvg8tzfyzkawbsjt\">Ec2 Server Status Check using Boto3</a></li>\n<li><a href=\"/notes/890e29fylut7y1zqv9mtw7n\">Add Env Tags to  Ec2 Servers with Boto3</a></li>\n<li><a href=\"/notes/llkdoaituan5psfnwiw8tf5\">EKS cluster information</a></li>\n<li><a href=\"/notes/pr716orm61uub9wy1ksco8h\">Automate Data Backup of EC2 instances</a></li>\n<li><a href=\"/notes/6yea3nujt8yupmf4wdtj7mk\">Automate cleanup of old Snapshots</a></li>\n<li><a href=\"/notes/9im04y0czc0iiw0jw0rbr92\">Restore volume from a snapshot of EC2 instance</a></li>\n</ul>\n<h2 id=\"resources\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#resources\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Resources</h2>\n<ul>\n<li><a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/index.html\">Boto3 documentation</a></li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/pr716orm61uub9wy1ksco8h\">Automate Data Backup of EC2 instances</a></li>\n<li><a href=\"/notes/6yea3nujt8yupmf4wdtj7mk\">Automate cleanup of old Snapshots</a></li>\n<li><a href=\"/notes/llkdoaituan5psfnwiw8tf5\">EKS cluster information</a></li>\n<li><a href=\"/notes/9im04y0czc0iiw0jw0rbr92\">Restore volume from a snapshot of EC2 instance</a></li>\n<li><a href=\"/notes/890e29fylut7y1zqv9mtw7n\">Add Env Tags to  Ec2 Servers with Boto3</a></li>\n<li><a href=\"/notes/i5wu7j4cvg8tzfyzkawbsjt\">Ec2 Server Status Check using Boto3</a></li>\n<li><a href=\"/notes/wa4wthnhw54hd5wfyocyvqa\">Python</a></li>\n</ul>","noteIndex":{"id":"3nfl4nvv516muyzozhcwrw8","title":"/root","desc":"","updated":1655559901157,"created":1637610830605,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"581715455a6f0f7a699209e8521b4acf","links":[{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"archive.about","alias":"my","position":{"start":{"line":4,"column":9,"offset":37},"end":{"line":4,"column":29,"offset":57},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"archive.about"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"tags.areas","alias":"#areas","position":{"start":{"line":20,"column":111,"offset":1051},"end":{"line":20,"column":117,"offset":1057},"indent":[]},"xvault":false,"to":{"fname":"tags.areas"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"tags.areas","alias":"#areas","position":{"start":{"line":21,"column":3,"offset":1198},"end":{"line":21,"column":9,"offset":1204},"indent":[]},"xvault":false,"to":{"fname":"tags.areas"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes","alias":"swipes","position":{"start":{"line":27,"column":3,"offset":1724},"end":{"line":27,"column":13,"offset":1734},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes.quotes","alias":"quotes","position":{"start":{"line":27,"column":48,"offset":1769},"end":{"line":27,"column":72,"offset":1793},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes.quotes"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes.excerpts","alias":"excerpts","position":{"start":{"line":27,"column":74,"offset":1795},"end":{"line":27,"column":102,"offset":1823},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes.excerpts"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes.sayings","alias":"sayings","position":{"start":{"line":27,"column":104,"offset":1825},"end":{"line":27,"column":130,"offset":1851},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes.sayings"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes.phrases","alias":"phrases","position":{"start":{"line":27,"column":132,"offset":1853},"end":{"line":27,"column":158,"offset":1879},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes.phrases"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"resources.people","alias":"others","position":{"start":{"line":27,"column":214,"offset":1935},"end":{"line":27,"column":241,"offset":1962},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"resources.people"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"inbox.webmark","alias":"webmark","position":{"start":{"line":31,"column":235,"offset":2463},"end":{"line":31,"column":260,"offset":2488},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"inbox.webmark"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"slipbox.Ontology","alias":"slipbox.Ontology","position":{"start":{"line":55,"column":3,"offset":3735},"end":{"line":55,"column":23,"offset":3755},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"slipbox.Ontology"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"archive.about","alias":"About me","position":{"start":{"line":60,"column":3,"offset":3963},"end":{"line":60,"column":29,"offset":3989},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"archive.about"}}],"anchors":{"welcome-to-noetic-noggin":{"type":"header","text":"Welcome to Noetic Noggin","value":"welcome-to-noetic-noggin","line":8,"column":0,"depth":1},"principles":{"type":"header","text":"Principles","value":"principles","line":18,"column":0,"depth":2},"all-notes-should-be-relative-to-me":{"type":"header","text":"All notes should be relative to me.","value":"all-notes-should-be-relative-to-me","line":20,"column":0,"depth":3},"gotta-capture-em-all":{"type":"header","text":"Gotta capture 'em all","value":"gotta-capture-em-all","line":30,"column":0,"depth":3},"dont-force-evolution":{"type":"header","text":"Don't force evolution","value":"dont-force-evolution","line":40,"column":0,"depth":3},"noise--signal":{"type":"header","text":"Noise & Signal","value":"noise--signal","line":45,"column":0,"depth":3},"why-do-any-of-this":{"type":"header","text":"Why do any of this?","value":"why-do-any-of-this","line":50,"column":0,"depth":3},"structure-of-this-wiki":{"type":"header","text":"Structure of this wiki","value":"structure-of-this-wiki","line":59,"column":0,"depth":2},"quicklinks":{"type":"header","text":"Quicklinks","value":"quicklinks","line":64,"column":0,"depth":2}},"children":["0yay2om15bsg2li2p6qgux7","05c4nnjqa92zx11ld6o0ytn","9gtn7g40cvqui0sifl1s7t5","ftbd1hknsd3ocd7jao26tn3","a1kmkdbpclaz5p6sykaw6kc","z121gkmqfo09m8r7jgnpfgn","gkqrr7xbt18xhi93dmjrwzj","ja2x4lrgejr9o9wvit0bd0d","luv39odkfibx3wdosvigwvy","vtvk3bi6o72w58oima9xzf3","yy652kvqrkfn9ipk07m40h4"],"parent":null,"data":{},"body":"\n# Welcome to Noetic Noggin\n\nThis is [[my|archive.about]] personal wiki and a commonplace book; notes by me, for me.\n\n🚧 Permanently under construction 🚧\n\n![](https://res.cloudinary.com/zubayr/image/upload/v1658499909/wiki/ajevkuyebljlxiblyst2.png)\n\nThis wiki was made possible with [dendron.so](https://dendron.so) and [obisidian.md](https://obsidian.md). Stored on [Github Repository](https://github.com/zubayrrr/dendron) and hosted on [Netlify](https://netlify.com) for free.\n\n## Principles\n\n### All notes should be relative to me.\n\n- All notes in principle are written for me; what I know about a subject, how I feel about a particular thing.\n- Opinions are fine as long as I feel strong epistemic confidence in the given opinion.\n- Don't over explain a note if it's not necessary, remember, these notes are for you and are relative to whatever knowledge you posses about the subject.\n- Read books and make an dedicated notes for them.\n- Listen podcasts but capture them inside a \"subject specific\" note or \"Map of Concept\" note or a note tagged #areas. Because making notes from podcasts can be tedious as they're not as well structured as books for consumption.(Whose merit is debatable.)\n- #areas are basically \"Map of Concept\" notes but I have recently come to the realization that its better to maintain them [Nikita Voloboev style](https://wiki.nikiv.dev/) but with heavy usage of transclusion and backlinking.\n  - \"Resources\" should be first processed and then mentioned inside the note, otherwise they should be left in inbox.\n\n### Gotta capture 'em all\n\n- Hog whatever information tickles your pickle([anything that gratifies one's intellectual curiosity](https://news.ycombinator.com/newsguidelines.html)).\n- [[swipes]] are interesting/useful bits of... [[quotes|swipes.quotes]], [[excerpts|swipes.excerpts]], [[sayings|swipes.sayings]], [[phrases|swipes.phrases]]. Essentially, ideas, opinions that are swiped off from [[others|resources.people]].\n- Make no distinction between \"your\" ideas and ideas of \"others\", because if you vibe with an idea; it's already yours.\n- But also remember \"If you've time to consume, you've time to produce.\".\n- Use [raindrop.io](https://raindrop.io) to manage your URL bookmarks.\n- If you need to bookmark a webpage or an article all together, use [MarkDownload](https://chrome.google.com/webstore/detail/markdownload-markdown-web/pcmpcfapbekmbjjkdalcgopdkipoggdi?hl=en-GB) to rip the entire page. Let's call it a [[webmark|inbox.webmark]]; it belong in the `/inbox`.\n- Similar process is employed for capturing tweets using [tweet-to-markdown](https://github.com/kbravh/tweet-to-markdown) and it also belongs in the `/inbox`.\n\n### Don't force evolution\n\n- Let your second brain evolve at it's own pace.\n- The structure should never be _too_ rigid because its meant to take form by itself.\n\n### Noise & Signal\n\n- While capturing ideas left and right is recommended, make sure you're not harming your periods of focus.\n- Have impenetrable focus periods (use Pomodoro method) where you only care about the work on hand and nothing else.\n\n### Why do any of this?\n\n- Because I can't remember everything - there's a lot of information around that interests me and there isn't enough working memory installed in me.\n- So, I make notes - to remember, to create, to meditate, to think.\n- A bodybuilder's portfolio is their body - my portfolio is my wiki.\n- Not only am I making - whatever I know - tangible by writing it down. I know exactly where to look if I ever forget something.\n- I am at the beginning of my learning adventures. When I look back at it, I will know where I came from and how my thoughts evolved over time.\n- Plus, its really fun to nerd out.\n\n## Structure of this wiki\n\n- [[slipbox.Ontology]] explains the structure of this wiki and the tags, backlinks used in it.\n- Dendron takes care of the structure and hierarchy(mostly), but I insist on using tags for backwards compatibility.\n\n## Quicklinks\n\n- [[About me|archive.about]]\n- [Github](https://github.com/zubayrrr)\n- [Twitter](https://twitter.com/zoobhalu)\n- [Blog](https://zubayrali.in)\n- [Guestbook](https://www.yourworldoftext.com/~zubayrali/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template","insertNote":{"initialValue":"templates"}},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableHandlebarTemplates":true,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"theme":"dark","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Noetic Noggin","description":"Personal Wiki / Digital Garden","author":"Zubayr Ali","twitter":"zoobhalu"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"siteUrl":"localhost:3000","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}