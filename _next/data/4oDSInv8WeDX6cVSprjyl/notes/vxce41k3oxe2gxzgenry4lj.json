{"pageProps":{"note":{"id":"vxce41k3oxe2gxzgenry4lj","title":"Nexus","desc":"","updated":1657926610402,"created":1654593201127,"custom":{},"fname":"devlog.nexus","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"e4141a450424cb4c524645e73a5dd59c","links":[{"type":"wiki","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.artifact repository","alias":"artifact repository manager","position":{"start":{"line":2,"column":25,"offset":25},"end":{"line":2,"column":83,"offset":83},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.artifact repository"}},{"type":"wiki","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.LDAP","alias":"devlog.LDAP","position":{"start":{"line":6,"column":29,"offset":494},"end":{"line":6,"column":44,"offset":509},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.LDAP"}},{"type":"wiki","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.build automation","alias":"devlog.build automation","position":{"start":{"line":15,"column":64,"offset":904},"end":{"line":15,"column":91,"offset":931},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.build automation"}},{"type":"wiki","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.CI⁄CD pipeline","alias":"devlog.CI⁄CD pipeline","position":{"start":{"line":15,"column":96,"offset":936},"end":{"line":15,"column":121,"offset":961},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.CI⁄CD pipeline"}},{"type":"wiki","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.jenkins","alias":"devlog.jenkins","position":{"start":{"line":15,"column":174,"offset":1014},"end":{"line":15,"column":192,"offset":1032},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.jenkins"}},{"type":"wiki","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.netstat","alias":"devlog.netstat","position":{"start":{"line":29,"column":9,"offset":1826},"end":{"line":29,"column":27,"offset":1844},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.netstat"}},{"type":"wiki","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.Gradle","alias":"devlog.Gradle","position":{"start":{"line":57,"column":13,"offset":3330},"end":{"line":57,"column":30,"offset":3347},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.Gradle"}},{"type":"wiki","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.CI⁄CD pipeline","alias":"devlog.CI⁄CD pipeline","position":{"start":{"line":70,"column":39,"offset":3984},"end":{"line":70,"column":64,"offset":4009},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.CI⁄CD pipeline"}},{"type":"wiki","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.curl","alias":"devlog.curl","position":{"start":{"line":71,"column":57,"offset":4138},"end":{"line":71,"column":72,"offset":4153},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.curl"}},{"type":"wiki","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.wget","alias":"devlog.wget","position":{"start":{"line":71,"column":74,"offset":4155},"end":{"line":71,"column":89,"offset":4170},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.wget"}},{"type":"wiki","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.s3","alias":"devlog.s3","position":{"start":{"line":89,"column":60,"offset":5190},"end":{"line":89,"column":73,"offset":5203},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.s3"}},{"type":"wiki","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.nexus as docker container","alias":"devlog.nexus as docker container","position":{"start":{"line":139,"column":11,"offset":7421},"end":{"line":139,"column":47,"offset":7457},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"devlog.nexus as docker container"}},{"type":"ref","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.gradle","position":{"start":{"line":63,"column":1,"offset":3680},"end":{"line":63,"column":62,"offset":3741},"indent":[]},"xvault":false,"to":{"fname":"devlog.gradle","anchorHeader":"Configuring-Gradle-for-publishing-to-Nexus"}},{"type":"ref","from":{"fname":"devlog.nexus","id":"vxce41k3oxe2gxzgenry4lj","vaultName":"Dendron"},"value":"devlog.maven","position":{"start":{"line":64,"column":1,"offset":3742},"end":{"line":64,"column":60,"offset":3801},"indent":[]},"xvault":false,"to":{"fname":"devlog.maven","anchorHeader":"Configuring-Maven-for-publishing-to-Nexus"}},{"from":{"fname":"areas.devops","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":150,"column":5,"offset":4463},"end":{"line":150,"column":21,"offset":4479},"indent":[]},"value":"devlog.nexus","alias":"devlog.nexus"},{"from":{"fname":"devlog.Artifact Repository","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":12,"column":56,"offset":756},"end":{"line":12,"column":72,"offset":772},"indent":[]},"value":"devlog.nexus","alias":"devlog.nexus"},{"from":{"fname":"devlog.DevOps Best Practices","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":4,"column":64,"offset":222},"end":{"line":4,"column":80,"offset":238},"indent":[]},"value":"devlog.nexus","alias":"devlog.nexus"},{"from":{"fname":"devlog.Docker repository on Nexus","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":2,"column":12,"offset":12},"end":{"line":2,"column":28,"offset":28},"indent":[]},"value":"devlog.nexus","alias":"devlog.nexus"},{"from":{"fname":"devlog.Nexus as Docker container","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":2,"column":12,"offset":12},"end":{"line":2,"column":28,"offset":28},"indent":[]},"value":"devlog.nexus","alias":"devlog.nexus"},{"from":{"fname":"devlog.build automation","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":27,"column":55,"offset":922},"end":{"line":27,"column":71,"offset":938},"indent":[]},"value":"devlog.nexus","alias":"devlog.nexus"},{"from":{"fname":"devlog.build automation","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":112,"column":11,"offset":5164},"end":{"line":112,"column":27,"offset":5180},"indent":[]},"value":"devlog.nexus","alias":"devlog.nexus"},{"from":{"fname":"devlog.containers & images","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":20,"column":121,"offset":1750},"end":{"line":20,"column":137,"offset":1766},"indent":[]},"value":"devlog.nexus","alias":"devlog.nexus"},{"from":{"fname":"devlog.jenkins","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":14,"column":121,"offset":1023},"end":{"line":14,"column":137,"offset":1039},"indent":[]},"value":"devlog.nexus","alias":"devlog.nexus"},{"from":{"fname":"devlog.jenkins","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":170,"column":25,"offset":7878},"end":{"line":170,"column":41,"offset":7894},"indent":[]},"value":"devlog.nexus","alias":"devlog.nexus"},{"from":{"fname":"devlog.maven","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":140,"column":84,"offset":5563},"end":{"line":140,"column":100,"offset":5579},"indent":[]},"value":"devlog.Nexus","alias":"devlog.Nexus"}],"anchors":{"nexus-ui":{"type":"header","text":"Nexus UI","value":"nexus-ui","line":39,"column":0,"depth":2},"repository-types":{"type":"header","text":"Repository types","value":"repository-types","line":50,"column":0,"depth":2},"create-new-repository":{"type":"header","text":"Create new repository","value":"create-new-repository","line":56,"column":0,"depth":2},"publishing-artifacts-to-nexus-repository":{"type":"header","text":"Publishing artifacts to Nexus repository.","value":"publishing-artifacts-to-nexus-repository","line":60,"column":0,"depth":2},"nexus-api":{"type":"header","text":"Nexus API","value":"nexus-api","line":72,"column":0,"depth":2},"blob-store":{"type":"header","text":"Blob Store","value":"blob-store","line":88,"column":0,"depth":2},"components-vs-assets":{"type":"header","text":"Components VS Assets","value":"components-vs-assets","line":115,"column":0,"depth":2},"cleanup-policies":{"type":"header","text":"Cleanup policies","value":"cleanup-policies","line":125,"column":0,"depth":2}},"children":[],"parent":"9gtn7g40cvqui0sifl1s7t5","data":{}},"body":"<h1 id=\"nexus\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#nexus\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Nexus</h1>\n<p>Nexus is an open-source <a href=\"/notes/slohd4hnb6y31jj538tm0do\">artifact repository manager</a>. It allows you to upload, download, store different built artifacts. It allows you to manage multiple repositories for different repository formats.</p>\n<p>Nexus is used as private or internal use only repository manager, where you can host your company internal own repositories. You can also create proxy repository (fetching from Maven and keeping it Nexus to centralize/consolidate)</p>\n<ul>\n<li>You can integrate it with <a href=\"/notes/p26uzzg8atumbncad2vvepp\">LDAP</a>.</li>\n<li>Flexible and powerful REST API end-point for integration with other tools.</li>\n<li>Backup and restore.</li>\n<li>Multi-format support (different artifact types - zip, tar, jar, war etc).</li>\n<li>Metadata tagging (labelling and tagging artifacts).</li>\n<li>Cleanup policies.</li>\n<li>Search.</li>\n<li>User token support for non-human users(system user authentication).</li>\n</ul>\n<p>You'll probably not use Nexus manually - it'll be part of your <a href=\"/notes/qcaw5ht4vcnucydq104gh7v\">Build Automation</a> and <a href=\"/notes/eoy9t426lmr0wo5rpxm8g69\">CI⁄CD Pipeline</a> cycle. It is meant to be integrated with tools like <a href=\"/notes/jqsu891tokqfup82wkq6j02\">Jenkins</a> and other deployment tools.</p>\n<hr>\n<ul>\n<li><code>Nexus</code> folder contains the runtime application of Nexus inside the <code>/bin</code>.</li>\n<li><code>Sonatype-work</code> folder contains your own config of Nexus and data.\n<ul>\n<li>Different subdirectories will appear depending on your Nexus configuration, such as plugin directories.</li>\n<li>It also has a log file that has all the IP addresses that have accessed the Nexus application.</li>\n<li>It also has the log file for the Nexus application.</li>\n<li>It is where you upload your files and metadata.</li>\n<li>This folder is used to backup your Nexus application.</li>\n</ul>\n</li>\n<li>As a best practice, create a dedicated user to run this service with the permissions to access the above dirs.</li>\n<li>Inside <code>Nexus/bin/nexus.rc</code> set <code>run_as_user=</code> to the newly created user.</li>\n<li>To start Nexus <code>Nexus/bin/nexus start</code>.\n<ul>\n<li>Use <a href=\"/notes/05txufwh4u6s1aop2eky199\">netstat</a> <code>-lnpt</code> to look for process ID and the port for external requests.</li>\n<li>Set inbound connections for that port on your server's firewall rules(TCP).</li>\n</ul>\n</li>\n<li>The Nexus UI will be available on <code>serverip:nexusport</code>.</li>\n</ul>\n<h2 id=\"nexus-ui\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#nexus-ui\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Nexus UI</h2>\n<p><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654644255/wiki/xloscf79pdo22hnbly1d.png\"></p>\n<ul>\n<li>A default user(admin) is created along with password when you deploy Nexus.</li>\n<li>Login and configure</li>\n<li>Managing repositories\n<ul>\n<li><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654644605/wiki/kijj1oitz8sgh1taphvp.png\"></li>\n<li><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654644644/wiki/mudnethtl9ktehqp4ssr.png\">\n<ul>\n<li>By default some repositories are created.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"repository-types\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#repository-types\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Repository types</h2>\n<ul>\n<li><strong>Proxy</strong> - linked to a remote repository such as Maven Central Repository. If you’re requesting a package, Nexus will first look locally to see if the requested package is available; if it isn’t, the request will be made to the remote repository and then stored on Nexus locally(and will act like a cache), it’ll also help you with bringing in proprietary/commercial packages that are not available externally.</li>\n<li><strong>Hosted</strong></li>\n<li><strong>Group</strong> - grouping multiple repository end-points to a single repository end-point.</li>\n</ul>\n<h2 id=\"create-new-repository\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#create-new-repository\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Create new repository</h2>\n<ul>\n<li><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654645683/wiki/ijv67etao7mokg2fklu0.png\"></li>\n</ul>\n<h2 id=\"publishing-artifacts-to-nexus-repository\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#publishing-artifacts-to-nexus-repository\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Publishing artifacts to Nexus repository.</h2>\n<ul>\n<li>Both Maven and Gradle have commands for pushing artifacts to remote repositories.</li>\n<li>Maven and <a href=\"/notes/saz485w50o682scob9knhp1\">Gradle</a> needs Nexus repo URL and credentials.</li>\n<li>Nexus users are needed with permissions to upload.\n<ul>\n<li><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654646661/wiki/z7pdilioj7ermzvy2jz0.png\"></li>\n<li>Create role for the newly created users</li>\n<li><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654646774/wiki/cyzetrxf13ts8xzfwhfb.png\"></li>\n</ul>\n</li>\n</ul>\n<p></p><p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Gradle</span></div>\n<a href=\"/notes/saz485w50o682scob9knhp1\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">→</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><h2 id=\"configuring-gradle-for-publishing-to-nexus\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#configuring-gradle-for-publishing-to-nexus\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Configuring Gradle for publishing to Nexus</h2>\n<p>An example <code>build.gradle</code> will look something like this:</p>\n<p><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654647349/wiki/oycxy56ehtdfouhrk1xt.png\"></p>\n<p>All that’s left is building <code>./gradlew build</code> and then <code>./gradlew publish</code>.</p>\n</div></div><p></p>\n<p></p><div class=\"portal-container\">\n<div class=\"portal-head\">\n<div class=\"portal-backlink\">\n<div class=\"portal-title\">From <span class=\"portal-text-title\">Maven</span></div>\n<a href=\"/notes/482tfc3v73o3d4p8yi3b4z7\" class=\"portal-arrow\">Go to text <span class=\"right-arrow\">→</span></a>\n</div>\n</div>\n<div id=\"portal-parent-anchor\" class=\"portal-parent\" markdown=\"1\">\n<div class=\"portal-parent-fader-top\"></div>\n<div class=\"portal-parent-fader-bottom\"></div><h2 id=\"configuring-maven-for-publishing-to-nexus\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#configuring-maven-for-publishing-to-nexus\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Configuring Maven for publishing to Nexus</h2>\n<p>An example <code>pom.xml</code> will look something like this:</p>\n<p><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654647915/wiki/ps52q6penyp1thbar1pi.png\"></p>\n<p>To configure user credentials for a repository on a Maven is in the <code>~/.m2/settings.xml</code> dir in your user’s <code>$HOME</code> dir.</p>\n<p><code>settings.xml</code> will looking something like:</p>\n<pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>settings</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/SETTINGS/1.0.0<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>xsi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\"><span class=\"token namespace\">xsi:</span>schemaLocation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  ...\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>servers</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>server</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>id</span><span class=\"token punctuation\">></span></span>server001<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>id</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>username</span><span class=\"token punctuation\">></span></span>my_login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>username</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>password</span><span class=\"token punctuation\">></span></span>my_password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>password</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>privateKey</span><span class=\"token punctuation\">></span></span>${user.home}/.ssh/id_dsa<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>privateKey</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>passphrase</span><span class=\"token punctuation\">></span></span>some_passphrase<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>passphrase</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>filePermissions</span><span class=\"token punctuation\">></span></span>664<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>filePermissions</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>directoryPermissions</span><span class=\"token punctuation\">></span></span>775<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>directoryPermissions</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>configuration</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>configuration</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>server</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>servers</span><span class=\"token punctuation\">></span></span>\n  ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>settings</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>All that's left is <code>mvn package</code> and then <code>mvn deploy</code> to upload the <code>.jar</code> to the <a href=\"/notes/vxce41k3oxe2gxzgenry4lj\">Nexus</a> repository.</p></div></div><p></p><p></p>\n<h2 id=\"nexus-api\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#nexus-api\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Nexus API</h2>\n<ul>\n<li>\n<p>It can be used to query your Nexus repo for different information.</p>\n<ul>\n<li>Which components, repositories, versions are available.</li>\n</ul>\n</li>\n<li>\n<p>This information is needed for your <a href=\"/notes/eoy9t426lmr0wo5rpxm8g69\">CI⁄CD Pipeline</a>, to progmatically set the name, version of the artifact to be deployed.</p>\n</li>\n<li>\n<p>Nexus API's REST endpoint can be used with tools like <a title=\"Private\" style=\"color: brown\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\">devlog.curl (Private)</a>, <a href=\"/notes/zt6hnpeyl30i6jlbwa48eth\">wget</a> to execute an http request.</p>\n</li>\n<li>\n<p>A Nexus user is created with certain permissions and the user's credentials are used to make queries.</p>\n</li>\n<li>\n<p>Making a request using curl to get repositories</p>\n<ul>\n<li><code>curl -u user:pw -X GET 'http://ip-address:port/serivce/rest/v1/repositories'</code></li>\n<li>It will return data in JSON format.</li>\n</ul>\n</li>\n<li>\n<p>Making a request using curl to list all the components inside a repo</p>\n<ul>\n<li><code>curl -u user:pw -X GET 'http://ip-address:port/serivce/rest/v1/components?repository=repo-name'</code></li>\n</ul>\n</li>\n<li>\n<p>You can also query using component ID</p>\n<ul>\n<li><code>curl -u user:pw -X GET 'http://ip-address:port/serivce/rest/v1/components/component-id'</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"blob-store\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#blob-store\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Blob Store</h2>\n<p><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654651381/wiki/pxxp2ggectz2acun57hh.png\"></p>\n<ul>\n<li>\n<p>Nexus uses Blob Store as storage for it's components.</p>\n</li>\n<li>\n<p>Blob store is what Nexus is using to manage the storage per repository for all of it's components.</p>\n</li>\n<li>\n<p>A blob store is an internal storage mechanism for binary parts of artifacts.</p>\n</li>\n<li>\n<p>It can be on a local FS or on a cloud based storage like <a title=\"Private\" style=\"color: brown\" href=\"https://wiki.dendron.so/notes/hfyvYGJZQiUwQaaxQO27q.html\" target=\"_blank\">devlog.s3 (Private)</a></p>\n</li>\n<li>\n<p>Each blob store can be used by one or multiple repository groups.</p>\n</li>\n<li>\n<p>On drive it can be found at <code>/Sonatype-work/nexus3/blobs</code>.</p>\n</li>\n<li>\n<p>Type field = Storage backend</p>\n<ul>\n<li>It can be file system-based storage(default)</li>\n<li>S3 - cloud based storage(when Nexus Repository Manager is hosted on AWS)</li>\n</ul>\n</li>\n<li>\n<p>State field = State of the blob store</p>\n<ul>\n<li>started - running as expected</li>\n<li>failed - configuration issue - failed to initialize</li>\n</ul>\n</li>\n<li>\n<p>Blob count field = number of blobs currently stored(<code>/blobs/default/content</code>)</p>\n</li>\n<li>\n<p>Total size</p>\n</li>\n<li>\n<p>Available space</p>\n</li>\n<li>\n<p>Creating new blob store</p>\n<ul>\n<li><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654651357/wiki/w1gk5ilsrqc78n85lyxf.png\"></li>\n</ul>\n</li>\n<li>\n<p>Once created it cannot be modified</p>\n</li>\n<li>\n<p>Blob store used by a repository cannot be deleted</p>\n</li>\n<li>\n<p>One repository cannot use multiple blob store</p>\n</li>\n</ul>\n<h2 id=\"components-vs-assets\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#components-vs-assets\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Components VS Assets</h2>\n<p>A component is more abstract - like the entire application that was uploaded. It is a generic definition, the term components refers to any type/format of package that was uploaded to the repository(an artifact, a package, archive etc).</p>\n<p><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654651811/wiki/e9ox01rt7okk17e8fbye.png\"></p>\n<p>Assets are individual files inside the application.</p>\n<p><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654651861/wiki/f69xhzetjfeca6kedqtz.png\"></p>\n<h2 id=\"cleanup-policies\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#cleanup-policies\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Cleanup policies</h2>\n<p>It helps you define rules that will cleanup artifacts(components) from the repository(either if they’re too old or haven’t been used in a long time etc) to free up storage for new components.</p>\n<p>Create a new policy</p>\n<p><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654652487/wiki/n07gfou0xjnhsmwpiiwd.png\"></p>\n<p>Make sure to attach the policy to a repository.</p>\n<p>As soon as a cleanup policy is created, a task is also created that will schedule the execution of the policy.</p>\n<p><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654652738/wiki/nw1hx6vze1oelsftyk5l.png\"></p>\n<p>Cleanup will only mark them(the components) for deletion. It is called a softdelete. To actually delete files from the disk, the blob store needs to be compacted(a task can be created).</p>\n<p><img src=\"https://res.cloudinary.com/zubayr/image/upload/v1654652902/wiki/pyvyzxlmqg1dckmhfv65.png\"></p>\n<p>You can also manually trigger the tasks.</p>\n<p>See also: <a href=\"/notes/kwbbvuw6u3l28epk3prcncf\">Nexus as Docker container</a></p>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/522ww47pqvt6y0yj8zparmy\">DevOps</a></li>\n<li><a href=\"/notes/slohd4hnb6y31jj538tm0do\">Artifact Repository</a></li>\n<li><a href=\"/notes/5151o31s5jmalwws5joksse\">DevOps Best Practices</a></li>\n<li><a href=\"/notes/ccglabj2ycmrw83mownsa6l\">Docker repository on Nexus</a></li>\n<li><a href=\"/notes/kwbbvuw6u3l28epk3prcncf\">Nexus as Docker container</a></li>\n<li><a href=\"/notes/qcaw5ht4vcnucydq104gh7v\">Build Automation</a></li>\n<li><a href=\"/notes/4f08m6qrqyvpf6hfk1898vt\">Containers &#x26; Images</a></li>\n<li><a href=\"/notes/jqsu891tokqfup82wkq6j02\">Jenkins</a></li>\n<li><a href=\"/notes/482tfc3v73o3d4p8yi3b4z7\">Maven</a></li>\n</ul>","noteIndex":{"id":"3nfl4nvv516muyzozhcwrw8","title":"/root","desc":"","updated":1655559901157,"created":1637610830605,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"581715455a6f0f7a699209e8521b4acf","links":[{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"archive.about","alias":"my","position":{"start":{"line":4,"column":9,"offset":37},"end":{"line":4,"column":29,"offset":57},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"archive.about"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"tags.areas","alias":"#areas","position":{"start":{"line":20,"column":111,"offset":1051},"end":{"line":20,"column":117,"offset":1057},"indent":[]},"xvault":false,"to":{"fname":"tags.areas"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"tags.areas","alias":"#areas","position":{"start":{"line":21,"column":3,"offset":1198},"end":{"line":21,"column":9,"offset":1204},"indent":[]},"xvault":false,"to":{"fname":"tags.areas"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes","alias":"swipes","position":{"start":{"line":27,"column":3,"offset":1724},"end":{"line":27,"column":13,"offset":1734},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes.quotes","alias":"quotes","position":{"start":{"line":27,"column":48,"offset":1769},"end":{"line":27,"column":72,"offset":1793},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes.quotes"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes.excerpts","alias":"excerpts","position":{"start":{"line":27,"column":74,"offset":1795},"end":{"line":27,"column":102,"offset":1823},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes.excerpts"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes.sayings","alias":"sayings","position":{"start":{"line":27,"column":104,"offset":1825},"end":{"line":27,"column":130,"offset":1851},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes.sayings"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"swipes.phrases","alias":"phrases","position":{"start":{"line":27,"column":132,"offset":1853},"end":{"line":27,"column":158,"offset":1879},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"swipes.phrases"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"resources.people","alias":"others","position":{"start":{"line":27,"column":214,"offset":1935},"end":{"line":27,"column":241,"offset":1962},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"resources.people"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"inbox.webmark","alias":"webmark","position":{"start":{"line":31,"column":235,"offset":2463},"end":{"line":31,"column":260,"offset":2488},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"inbox.webmark"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"slipbox.Ontology","alias":"slipbox.Ontology","position":{"start":{"line":55,"column":3,"offset":3735},"end":{"line":55,"column":23,"offset":3755},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"slipbox.Ontology"}},{"type":"wiki","from":{"fname":"root","id":"3nfl4nvv516muyzozhcwrw8","vaultName":"Dendron"},"value":"archive.about","alias":"About me","position":{"start":{"line":60,"column":3,"offset":3963},"end":{"line":60,"column":29,"offset":3989},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"archive.about"}}],"anchors":{"welcome-to-noetic-noggin":{"type":"header","text":"Welcome to Noetic Noggin","value":"welcome-to-noetic-noggin","line":8,"column":0,"depth":1},"principles":{"type":"header","text":"Principles","value":"principles","line":18,"column":0,"depth":2},"all-notes-should-be-relative-to-me":{"type":"header","text":"All notes should be relative to me.","value":"all-notes-should-be-relative-to-me","line":20,"column":0,"depth":3},"gotta-capture-em-all":{"type":"header","text":"Gotta capture 'em all","value":"gotta-capture-em-all","line":30,"column":0,"depth":3},"dont-force-evolution":{"type":"header","text":"Don't force evolution","value":"dont-force-evolution","line":40,"column":0,"depth":3},"noise--signal":{"type":"header","text":"Noise & Signal","value":"noise--signal","line":45,"column":0,"depth":3},"why-do-any-of-this":{"type":"header","text":"Why do any of this?","value":"why-do-any-of-this","line":50,"column":0,"depth":3},"structure-of-this-wiki":{"type":"header","text":"Structure of this wiki","value":"structure-of-this-wiki","line":59,"column":0,"depth":2},"quicklinks":{"type":"header","text":"Quicklinks","value":"quicklinks","line":64,"column":0,"depth":2}},"children":["0yay2om15bsg2li2p6qgux7","05c4nnjqa92zx11ld6o0ytn","9gtn7g40cvqui0sifl1s7t5","ftbd1hknsd3ocd7jao26tn3","a1kmkdbpclaz5p6sykaw6kc","z121gkmqfo09m8r7jgnpfgn","gkqrr7xbt18xhi93dmjrwzj","ja2x4lrgejr9o9wvit0bd0d","luv39odkfibx3wdosvigwvy","vtvk3bi6o72w58oima9xzf3","yy652kvqrkfn9ipk07m40h4"],"parent":null,"data":{},"body":"\n# Welcome to Noetic Noggin\n\nThis is [[my|archive.about]] personal wiki and a commonplace book; notes by me, for me.\n\n🚧 Permanently under construction 🚧\n\n![](https://res.cloudinary.com/zubayr/image/upload/v1658499909/wiki/ajevkuyebljlxiblyst2.png)\n\nThis wiki was made possible with [dendron.so](https://dendron.so) and [obisidian.md](https://obsidian.md). Stored on [Github Repository](https://github.com/zubayrrr/dendron) and hosted on [Netlify](https://netlify.com) for free.\n\n## Principles\n\n### All notes should be relative to me.\n\n- All notes in principle are written for me; what I know about a subject, how I feel about a particular thing.\n- Opinions are fine as long as I feel strong epistemic confidence in the given opinion.\n- Don't over explain a note if it's not necessary, remember, these notes are for you and are relative to whatever knowledge you posses about the subject.\n- Read books and make an dedicated notes for them.\n- Listen podcasts but capture them inside a \"subject specific\" note or \"Map of Concept\" note or a note tagged #areas. Because making notes from podcasts can be tedious as they're not as well structured as books for consumption.(Whose merit is debatable.)\n- #areas are basically \"Map of Concept\" notes but I have recently come to the realization that its better to maintain them [Nikita Voloboev style](https://wiki.nikiv.dev/) but with heavy usage of transclusion and backlinking.\n  - \"Resources\" should be first processed and then mentioned inside the note, otherwise they should be left in inbox.\n\n### Gotta capture 'em all\n\n- Hog whatever information tickles your pickle([anything that gratifies one's intellectual curiosity](https://news.ycombinator.com/newsguidelines.html)).\n- [[swipes]] are interesting/useful bits of... [[quotes|swipes.quotes]], [[excerpts|swipes.excerpts]], [[sayings|swipes.sayings]], [[phrases|swipes.phrases]]. Essentially, ideas, opinions that are swiped off from [[others|resources.people]].\n- Make no distinction between \"your\" ideas and ideas of \"others\", because if you vibe with an idea; it's already yours.\n- But also remember \"If you've time to consume, you've time to produce.\".\n- Use [raindrop.io](https://raindrop.io) to manage your URL bookmarks.\n- If you need to bookmark a webpage or an article all together, use [MarkDownload](https://chrome.google.com/webstore/detail/markdownload-markdown-web/pcmpcfapbekmbjjkdalcgopdkipoggdi?hl=en-GB) to rip the entire page. Let's call it a [[webmark|inbox.webmark]]; it belong in the `/inbox`.\n- Similar process is employed for capturing tweets using [tweet-to-markdown](https://github.com/kbravh/tweet-to-markdown) and it also belongs in the `/inbox`.\n\n### Don't force evolution\n\n- Let your second brain evolve at it's own pace.\n- The structure should never be _too_ rigid because its meant to take form by itself.\n\n### Noise & Signal\n\n- While capturing ideas left and right is recommended, make sure you're not harming your periods of focus.\n- Have impenetrable focus periods (use Pomodoro method) where you only care about the work on hand and nothing else.\n\n### Why do any of this?\n\n- Because I can't remember everything - there's a lot of information around that interests me and there isn't enough working memory installed in me.\n- So, I make notes - to remember, to create, to meditate, to think.\n- A bodybuilder's portfolio is their body - my portfolio is my wiki.\n- Not only am I making - whatever I know - tangible by writing it down. I know exactly where to look if I ever forget something.\n- I am at the beginning of my learning adventures. When I look back at it, I will know where I came from and how my thoughts evolved over time.\n- Plus, its really fun to nerd out.\n\n## Structure of this wiki\n\n- [[slipbox.Ontology]] explains the structure of this wiki and the tags, backlinks used in it.\n- Dendron takes care of the structure and hierarchy(mostly), but I insist on using tags for backwards compatibility.\n\n## Quicklinks\n\n- [[About me|archive.about]]\n- [Github](https://github.com/zubayrrr)\n- [Twitter](https://twitter.com/zoobhalu)\n- [Blog](https://zubayrali.in)\n- [Guestbook](https://www.yourworldoftext.com/~zubayrali/)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{},"templateHierarchy":"template","insertNote":{"initialValue":"templates"}},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableHandlebarTemplates":true,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":true},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"theme":"dark","enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Noetic Noggin","description":"Personal Wiki / Digital Garden","author":"Zubayr Ali","twitter":"zoobhalu"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"siteUrl":"localhost:3000","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}